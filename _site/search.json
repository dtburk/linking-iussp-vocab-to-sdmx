[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IUSSP Vocabulary of Demography and SDMX",
    "section": "",
    "text": "Creating links between the in-development IUSSP FAIR Vocabulary of Demography and databases documented with SDMX creates exciting possibilities. Here are a couple use cases:\n\nCombining UNICEF indicators with IPUMS International data\nHarmonizing SDMX educational codelists"
  },
  {
    "objectID": "get-educ-stats-from-unicef-api.html",
    "href": "get-educ-stats-from-unicef-api.html",
    "title": "Retrieving education statistics from UNICEF with the rsdmx package",
    "section": "",
    "text": "Let’s say we want to download upper secondary completion rates for all available African countries from the UNICEF data API. The first step is finding a dataflow related to education. Using the rsdmx package, we can get a table of all dataflows available from the UNICEF API:\n\nall_unicef_dataflows &lt;- rsdmx::readSDMX(\n  providerId = \"UNICEF\", \n  resource = \"dataflow\"\n) |&gt; \n  dplyr::as_tibble()\n\n[rsdmx][INFO] Fetching 'https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/dataflow/all/all/latest/' \n\n\n\ndplyr::glimpse(all_unicef_dataflows)\n\nRows: 165\nColumns: 12\n$ id                  &lt;chr&gt; \"BRAZIL_CO\", \"BRAZIL_CO_SELO\", \"CAP2030\", \"CD2030\"…\n$ agencyID            &lt;chr&gt; \"BRAZIL_CO\", \"BRAZIL_CO\", \"CAP2030\", \"CD2030\", \"CD…\n$ Name.en             &lt;chr&gt; \"Brazil Country Office\", \"Brazil SELO\", \"CAP 2030\"…\n$ version             &lt;chr&gt; \"1.0\", \"1.0\", \"1.0\", \"1.0\", \"1.0\", \"1.0\", \"1.0\", \"…\n$ uri                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ urn                 &lt;chr&gt; \"urn:sdmx:org.sdmx.infomodel.datastructure.Dataflo…\n$ isExternalReference &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F…\n$ isFinal             &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F…\n$ validFrom           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ validTo             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ dsdRef              &lt;chr&gt; \"DSD_BRAZIL_CO\", \"DSD_BRAZIL_CO_SELO\", \"CAP2030\", …\n$ Description.en      &lt;chr&gt; NA, NA, NA, \"This dataset is used to support the d…\n\n\nNow let’s filter down to dataflows that mention education in their “Name.en” field:\n\nall_unicef_dataflows |&gt; \n  dplyr::filter(\n    stringr::str_detect(Name.en, stringr::fixed(\"education\", ignore_case = TRUE))\n  ) |&gt; \n  dplyr::select(id, agencyID, Name.en, dsdRef)\n\n# A tibble: 1 × 4\n  id    agencyID Name.en          dsdRef    \n  &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;     \n1 EDU   MENARO   MENARO Education MENARO_EDU\n\n\nLet’s say we want to explore the UNICEF dataflow with id equal to “EDUCATION”. We can see from the table above that that dataflow uses the data structure definition (DSD) “EDUCATION”. We can get more information on that DSD with:\n\nunicef_education_dsd &lt;- rsdmx::readSDMX(\n  providerId = \"UNICEF\",\n  resource = \"datastructure\",\n  resourceId = \"EDUCATION\"\n)\n\n[rsdmx][INFO] Fetching 'https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/datastructure/all/EDUCATION/latest/?references=children' \n\n\nWhen we make a data request below, we will need to know the DSD dimensions in order. To see the dimensions in order, along with the codelists used by each, we use:\n\ndimensions_in_order &lt;-\n  unicef_education_dsd@datastructures@datastructures[[1]]@Components@Dimensions\n\ndimensions_and_codelists_in_order &lt;- purrr::map2(\n  seq_along(dimensions_in_order),\n  dimensions_in_order,\n  ~dplyr::tibble(order = .x, dimension = .y@conceptRef, codelist = .y@codelist)\n) |&gt; purrr::list_rbind()\n\n\ndimensions_and_codelists_in_order\n\n# A tibble: 7 × 3\n  order dimension        codelist           \n  &lt;int&gt; &lt;chr&gt;            &lt;chr&gt;              \n1     1 REF_AREA         CL_COUNTRY         \n2     2 UNICEF_INDICATOR CL_UNICEF_INDICATOR\n3     3 SEX              CL_SEX             \n4     4 EDUCATION_LEVEL  CL_EDU_LEVEL       \n5     5 WEALTH_QUINTILE  CL_WEALTH_QUINTILE \n6     6 RESIDENCE        CL_RESIDENCE       \n7     7 UNIT_MEASURE     CL_UNIT_MEASURE    \n\n\nLet’s look more closely at the UNICIEF_INDICATOR dimension, which uses the codelist with name “CL_UNICEF_INDICATOR”:\n\nunicef_education_dsd_indicators_codelist &lt;- purrr::keep(\n  unicef_education_dsd@codelists@codelists,\n  ~.x@id == \"CL_UNICEF_INDICATOR\"\n)[[1]]\n\nWe can see information on the codes in the “CL_UNICEF_INDICATOR” codelist with:\n\nindicator_code_labels &lt;- purrr::map_chr(\n  unicef_education_dsd_indicators_codelist@Code,\n  ~.x@label$en\n)\nhead(indicator_code_labels)\n\n[1] \"Child mortality\"                                                               \n[2] \"Annual Rate of Reduction in Mortality Rate Age 10-19\"                          \n[3] \"Annual rate of reduction in stillbirth rate (over previous 20 years)\"          \n[4] \"Annual rate of reduction in under-five mortality rate (over previous 20 years)\"\n[5] \"Covid cases\"                                                                   \n[6] \"Covid cases share\"                                                             \n\n\nIt looks like we are getting all of the possible UNICEF indicators here, not just the ones related to education. Let’s filter down to just the indicators that mention “education”:\n\nstringr::str_subset(\n  indicator_code_labels, \n  stringr::fixed(\"education\", ignore_case = TRUE)\n)\n\n [1] \"Percentage of children aged 36-59 months attending an early childhood education programme\"                                                           \n [2] \"government expenditure on education (% government budget)\"                                                                                           \n [3] \"government expenditure on education (% GDP)\"                                                                                                         \n [4] \"Education\"                                                                                                                                           \n [5] \"Percentage of population aged 6-17 attending a formal educational institution (%)\"                                                                   \n [6] \"Completion rate for youth of upper secondary education school age\"                                                                                   \n [7] \"Proportion of children and young people b) at the end of primary education achieving at least a minimum proficiency level in (ii) mathematics\"       \n [8] \"Proportion of children and young people c) at the end of lower secondary educationachieving at least a minimum proficiency level in (ii) mathematics\"\n [9] \"Proportion of children and young people b) at the end of primary education achieving at least a minimum proficiency level in (i) reading\"            \n[10] \"Proportion of children and young people c) at the end of lower secondary education achieving at least a minimum proficiency level in (i) reading\"    \n[11] \"Average number of pupils per mathematics textbook in primary education\"                                                                              \n[12] \"Average number of pupils per reading textbook in primary education\"                                                                                  \n[13] \"Early childhood education (Functional difficulties)\"                                                                                                 \n[14] \"Educational attainment of the population (aged 25 years and older)\"                                                                                  \n[15] \"Pro-poor public social spending, education (%)\"                                                                                                      \n[16] \"Education National Targets\"                                                                                                                          \n[17] \"Percentage of adolescents (aged 15-19 years) not in education, employment or training\"                                                               \n[18] \"Pro-poor public social spending, education - Bottom quintile (%)\"                                                                                    \n[19] \"Completion rate for youth of upper secondary education school age (Modeled)\"                                                                         \n[20] \"Net enrolment rate, early childhood education\"                                                                                                       \n\n\nThe indicator “Completion rate for youth of upper secondary education school age” looks like what we want. Let’s see more information on that just to be sure:\n\nupper_secondary_completion_indicator &lt;- purrr::keep(\n  unicef_education_dsd_indicators_codelist@Code,\n  ~.x@label$en == \"Completion rate for youth of upper secondary education school age\"\n)[[1]]\n\nupper_secondary_completion_indicator@description$en\n\n[1] \"Percentage of a cohort of children or young people aged 3-5 years above the intended age for the last grade of upper secondary education who have completed upper secondary education\"\n\n\nIn order to request data for that indicator, we will need to know its ID value:\n\nupper_secondary_completion_indicator@id\n\n[1] \"ED_CR_L3\"\n\n\nIn this case, we want to limit to countries from Africa, so let’s look at the codelist “CL_COUNTRY”:\n\ncl_country_codelist &lt;- purrr::keep(\n  unicef_education_dsd@codelists@codelists,\n  ~.x@id == \"CL_COUNTRY\"\n)[[1]]\n\ncountry_codes_and_labels &lt;- purrr::map(\n  cl_country_codelist@Code,\n  ~dplyr::tibble(code = .x@id, label = .x@label$en)\n) |&gt; \n  purrr::list_rbind()\n\ncountry_codes_and_labels\n\n# A tibble: 371 × 2\n   code  label               \n   &lt;chr&gt; &lt;chr&gt;               \n 1 ABW   Aruba               \n 2 AFG   Afghanistan         \n 3 AGO   Angola              \n 4 AIA   Anguilla            \n 5 ALB   Albania             \n 6 AND   Andorra             \n 7 ARE   United Arab Emirates\n 8 ARG   Argentina           \n 9 ARM   Armenia             \n10 ASM   American Samoa      \n# ℹ 361 more rows\n\n\nLet’s use the countrycode package to find countries in Africa:\n\ncountry_codes_and_labels &lt;- country_codes_and_labels |&gt; \n  dplyr::mutate(\n    standard_label = countrycode::countryname(label, destination = \"country.name.en\")\n  ) |&gt; \n  dplyr::left_join(\n    countrycode::codelist |&gt; \n      dplyr::select(continent, country.name.en),\n    by = c(standard_label = \"country.name.en\")\n  )\n\nWarning: There were 2 warnings in `dplyr::mutate()`.\nThe first warning was:\nℹ In argument: `standard_label = countrycode::countryname(label, destination =\n  \"country.name.en\")`.\nCaused by warning:\n! Some values were not matched unambiguously: Africa, Africa (African Union), African Union, Americas, Arab Maghreb Union (UMA), Arab States, Asia, Asia and the Pacific, Australia and New Zealand, Caribbean, Central Africa (African Union), Central America, Central and Southern Asia, Central Asia, Common Market for Eastern and Southern Africa (COMESA), Community of Sahel-Saharan States (CEN-SAD), EAPR (operational region), East African Community (EAC), East and Southern Africa, East Asia and Pacific, Eastern Africa, Eastern Africa (African Union), Eastern and South-Eastern Asia, Eastern and Southern Africa, Eastern Asia, Eastern Europe, Eastern Europe and Central Asia, Eastern Mediterranean, ECAR (operational region), Economic Community of Central African States (ECCAS), Economic Community of West African States (ECOWAS), ESAR (operational region), Europe, Europe and Central Asia, Europe and Northern America, Intergovernmental Authority on Development (IGAD), LACR (operational region), Landlocked developing countries (LLDCs), Latin America and the Caribbean, Least developed countries, Less Developed Regions, Low income food deficient countries, Melanasia, Melanesia, MENA (operational region), Micronesia, Middle Africa, Middle East and North Africa, North America, Northern Africa, Northern Africa (African Union), Northern Africa and Western Asia, Northern America, Northern Europe, Oceania, Oceania, excluding Australia and New Zealand, OECD, OECD Fragile Contexts, Polynesia, Regional Economic Communities, ROSA (operational region), SDG regions - Global, Small Island Developing States (SIDS), SOFI - Global, South-eastern Asia, South-Eastern Asia, South America, South Asia, Southeast Asia, Southern Africa, Southern Africa (African Union), Southern African Development Community (SADC), Southern Asia, Southern Europe, Sub-Saharan Africa, UN regions - Global, UNFPA regions, UNICEF operational regions, UNICEF Programme Regions - Global, UNICEF reporting regions - Global, WCAR (operational region), West and Central Africa, Western Africa, Western Africa (African Union), Western Asia, Western Europe, Western Pacific, World, World Bank (high income), World Bank (low income), World Bank (lower middle income), World Bank (upper middle income), World Bank income groups - Global, World bank World - Global, World Health Organisation regions - Global\nℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.\n\n\nLet’s see which labels couldn’t be matched unambiguously:\n\ncountry_codes_and_labels |&gt; \n  dplyr::filter(is.na(continent)) |&gt; \n  dplyr::pull(label)\n\n  [1] \"Channel Islands\"                                       \n  [2] \"SOFI - Global\"                                         \n  [3] \"Low income food deficient countries\"                   \n  [4] \"Africa\"                                                \n  [5] \"South America\"                                         \n  [6] \"Oceania\"                                               \n  [7] \"Western Africa\"                                        \n  [8] \"Central America\"                                       \n  [9] \"Eastern Africa\"                                        \n [10] \"Northern Africa\"                                       \n [11] \"Middle Africa\"                                         \n [12] \"Southern Africa\"                                       \n [13] \"Northern America\"                                      \n [14] \"Caribbean\"                                             \n [15] \"Eastern Asia\"                                          \n [16] \"Southern Asia\"                                         \n [17] \"South-eastern Asia\"                                    \n [18] \"Australia and New Zealand\"                             \n [19] \"Asia\"                                                  \n [20] \"Central Asia\"                                          \n [21] \"Western Asia\"                                          \n [22] \"Eastern Europe\"                                        \n [23] \"Northern Europe\"                                       \n [24] \"Western Europe\"                                        \n [25] \"Southern Europe\"                                       \n [26] \"Latin America and the Caribbean\"                       \n [27] \"Melanasia\"                                             \n [28] \"Oceania, excluding Australia and New Zealand\"          \n [29] \"Micronesia\"                                            \n [30] \"Polynesia\"                                             \n [31] \"UN regions - Global\"                                   \n [32] \"Less Developed Regions\"                                \n [33] \"Asia and the Pacific\"                                  \n [34] \"Arab States\"                                           \n [35] \"Eastern Europe and Central Asia\"                       \n [36] \"East and Southern Africa\"                              \n [37] \"Latin America and the Caribbean\"                       \n [38] \"UNFPA regions\"                                         \n [39] \"West and Central Africa\"                               \n [40] \"East Asia and Pacific\"                                 \n [41] \"East Asia and Pacific\"                                 \n [42] \"Europe and Central Asia\"                               \n [43] \"Europe and Central Asia\"                               \n [44] \"Eastern Europe and Central Asia\"                       \n [45] \"Eastern and Southern Africa\"                           \n [46] \"Eastern and Southern Africa\"                           \n [47] \"Latin America and the Caribbean\"                       \n [48] \"Latin America and the Caribbean\"                       \n [49] \"Middle East and North Africa\"                          \n [50] \"Middle East and North Africa\"                          \n [51] \"North America\"                                         \n [52] \"UNICEF Programme Regions - Global\"                     \n [53] \"UNICEF reporting regions - Global\"                     \n [54] \"South Asia\"                                            \n [55] \"South Asia\"                                            \n [56] \"Sub-Saharan Africa\"                                    \n [57] \"West and Central Africa\"                               \n [58] \"West and Central Africa\"                               \n [59] \"Western Europe\"                                        \n [60] \"Australia and New Zealand\"                             \n [61] \"Caribbean\"                                             \n [62] \"Central America\"                                       \n [63] \"Central Asia\"                                          \n [64] \"Central and Southern Asia\"                             \n [65] \"Eastern Africa\"                                        \n [66] \"Eastern Asia\"                                          \n [67] \"Eastern and South-Eastern Asia\"                        \n [68] \"Eastern Europe\"                                        \n [69] \"Europe\"                                                \n [70] \"Europe and Northern America\"                           \n [71] \"Latin America and the Caribbean\"                       \n [72] \"Least developed countries\"                             \n [73] \"Landlocked developing countries (LLDCs)\"               \n [74] \"Melanesia\"                                             \n [75] \"Middle Africa\"                                         \n [76] \"Northern Africa\"                                       \n [77] \"North America\"                                         \n [78] \"Oceania\"                                               \n [79] \"Oceania, excluding Australia and New Zealand\"          \n [80] \"Polynesia\"                                             \n [81] \"SDG regions - Global\"                                  \n [82] \"Small Island Developing States (SIDS)\"                 \n [83] \"South America\"                                         \n [84] \"Southern Asia\"                                         \n [85] \"South-Eastern Asia\"                                    \n [86] \"Southern Africa\"                                       \n [87] \"Sub-Saharan Africa\"                                    \n [88] \"Western Africa\"                                        \n [89] \"Western Asia\"                                          \n [90] \"Northern Africa and Western Asia\"                      \n [91] \"East Asia and Pacific\"                                 \n [92] \"World Bank (high income)\"                              \n [93] \"World Bank income groups - Global\"                     \n [94] \"Latin America and the Caribbean\"                       \n [95] \"World Bank (low income)\"                               \n [96] \"World Bank (lower middle income)\"                      \n [97] \"Middle East and North Africa\"                          \n [98] \"North America\"                                         \n [99] \"World bank World - Global\"                             \n[100] \"South Asia\"                                            \n[101] \"Sub-Saharan Africa\"                                    \n[102] \"World Bank (upper middle income)\"                      \n[103] \"Africa\"                                                \n[104] \"Americas\"                                              \n[105] \"Eastern Mediterranean\"                                 \n[106] \"Europe\"                                                \n[107] \"World Health Organisation regions - Global\"            \n[108] \"Southeast Asia\"                                        \n[109] \"Western Pacific\"                                       \n[110] \"World\"                                                 \n[111] \"Kosovo (UNSCR 1244)\"                                   \n[112] \"African Union\"                                         \n[113] \"Africa (African Union)\"                                \n[114] \"Central Africa (African Union)\"                        \n[115] \"Eastern Africa (African Union)\"                        \n[116] \"Northern Africa (African Union)\"                       \n[117] \"Southern Africa (African Union)\"                       \n[118] \"Western Africa (African Union)\"                        \n[119] \"OECD\"                                                  \n[120] \"OECD Fragile Contexts\"                                 \n[121] \"UNICEF operational regions\"                            \n[122] \"EAPR (operational region)\"                             \n[123] \"ECAR (operational region)\"                             \n[124] \"ESAR (operational region)\"                             \n[125] \"LACR (operational region)\"                             \n[126] \"MENA (operational region)\"                             \n[127] \"ROSA (operational region)\"                             \n[128] \"WCAR (operational region)\"                             \n[129] \"Regional Economic Communities\"                         \n[130] \"Arab Maghreb Union (UMA)\"                              \n[131] \"Common Market for Eastern and Southern Africa (COMESA)\"\n[132] \"Community of Sahel-Saharan States (CEN-SAD)\"           \n[133] \"East African Community (EAC)\"                          \n[134] \"Economic Community of Central African States (ECCAS)\"  \n[135] \"Economic Community of West African States (ECOWAS)\"    \n[136] \"Intergovernmental Authority on Development (IGAD)\"     \n[137] \"Southern African Development Community (SADC)\"         \n\n\nLooks like most of these are super- or sub-national regions, so it makes sense that we couldn’t match them to a single country name. Now we’re ready to filter down to countries in Africa so we can get the corresponding codes for our API request:\n\nafrican_country_codes &lt;- country_codes_and_labels |&gt; \n  dplyr::filter(continent == \"Africa\")\n\nafrican_country_codes\n\n# A tibble: 57 × 4\n   code  label                            standard_label           continent\n   &lt;chr&gt; &lt;chr&gt;                            &lt;chr&gt;                    &lt;chr&gt;    \n 1 AGO   Angola                           Angola                   Africa   \n 2 BDI   Burundi                          Burundi                  Africa   \n 3 BEN   Benin                            Benin                    Africa   \n 4 BFA   Burkina Faso                     Burkina Faso             Africa   \n 5 BWA   Botswana                         Botswana                 Africa   \n 6 CAF   Central African Republic         Central African Republic Africa   \n 7 CIV   Côte d'Ivoire                    Côte d’Ivoire            Africa   \n 8 CMR   Cameroon                         Cameroon                 Africa   \n 9 COD   Democratic Republic of the Congo Congo - Kinshasa         Africa   \n10 COG   Congo                            Congo - Brazzaville      Africa   \n# ℹ 47 more rows\n\n\nWe could filter our request on additional dimensions, but for the sake of simplicity let’s filter only to our target indicator and countries. Here’s how to make that request:\n\nafrican_education_data &lt;- rsdmx::readSDMX(\n  providerId = \"UNICEF\",\n  resource = \"data\",\n  flowRef = \"EDUCATION\",\n  key = list(african_country_codes$code, \"ED_CR_L3\")\n)\n\n[rsdmx][INFO] Fetching 'https://sdmx.data.unicef.org/ws/public/sdmxapi/rest/data/EDUCATION/AGO+BDI+BEN+BFA+BWA+CAF+CIV+CMR+COD+COG+COM+CPV+DJI+DZA+EGY+ERI+ETH+GAB+GHA+GIN+GMB+GNB+GNQ+KEN+LBR+LBY+LSO+MAR+MDG+MLI+MOZ+MRT+MUS+MWI+MYT+NAM+NER+NGA+REU+RWA+SDN+SEN+SHN+SLE+SOM+SSD+STP+SWZ+SYC+TCD+TGO+TUN+TZA+UGA+ZAF+ZMB+ZWE.ED_CR_L3/all/' \n\n\nRemember from above that reference area and indicator were the first two dimensions in the DSD, which is why we can list our restrictions for just those two dimensions in our key argument. The list passed to key will be assumed to correspond to the first “n” dimensions (where n is the length of the list).\nTo work with the data in R, we need to transform them from XML to an R data.frame or tibble:\n\nafrican_education_data_as_list &lt;- XML::xmlToList(african_education_data@xmlObj)\n\n\nafrican_education_data_points &lt;- african_education_data_as_list$DataSet[\n  names(african_education_data_as_list$DataSet) == \"Series\"\n]\n\nafrican_education_data_as_tibble &lt;- purrr::map(\n  african_education_data_points,\n  function(datapoint) {\n    obs_data &lt;- purrr::map(datapoint$Obs, ~.x)\n    dimension_data &lt;- purrr::map(datapoint$.attrs, ~.x)\n    dplyr::bind_cols(dimension_data, obs_data)\n  }\n) |&gt; \n  purrr::list_rbind()\n\nNow let’s filter to only totals by sex, wealth quintile, and residence, and select and rename only the columns we want:\n\nafrican_education_data_cleaned &lt;- african_education_data_as_tibble |&gt; \n  dplyr::filter(\n    dplyr::if_all(c(SEX, WEALTH_QUINTILE, RESIDENCE), ~.x == \"_T\")\n  ) |&gt; \n  dplyr::left_join(\n    african_country_codes |&gt; \n      dplyr::select(REF_AREA = code, country_name = standard_label), \n    by = \"REF_AREA\"\n  ) |&gt; \n  dplyr::select(\n    country_name, \n    year = TIME_PERIOD, \n    percent_completing_secondary = OBS_VALUE,\n    data_source = DATA_SOURCE\n  ) |&gt; \n  dplyr::mutate(\n    percent_completing_secondary = as.numeric(percent_completing_secondary)\n  )\n\nNow we’re ready to plot our data:\n\nafrican_education_data_cleaned |&gt; \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = forcats::fct_reorder(country_name, percent_completing_secondary), \n      y = percent_completing_secondary\n    )\n  ) + \n    ggplot2::geom_col() +\n    ggplot2::coord_flip() +\n    ggplot2::labs(\n      title = \"Upper secondary completion rate, selected African countries\",\n      y = \"% completing upper secondary\",\n      x = \"Country\",\n      caption = \"Source: UNICEF\"\n    )"
  },
  {
    "objectID": "harmonize-sdmx-education-codelists.html",
    "href": "harmonize-sdmx-education-codelists.html",
    "title": "Harmonizing SDMX education codelists",
    "section": "",
    "text": "Let’s try to find two dataflows with disaggregations by education from two different data providers. What data providers are available?\n\nall_data_providers &lt;- rsdmx::getSDMXServiceProviders()\n\npurrr::map(\n  all_data_providers@providers,\n  ~dplyr::tibble(id = .x@agencyId, name = .x@name)\n) |&gt; \n  purrr::list_rbind() |&gt; \n  print(n = 30)\n\n# A tibble: 28 × 2\n   id         name                                                              \n   &lt;chr&gt;      &lt;chr&gt;                                                             \n 1 BIS        \"Bank for International Settlements\"                              \n 2 ECB        \"European Central Bank\"                                           \n 3 ESTAT      \"Eurostat (Statistical office of the European Union)\"             \n 4 ESTAT      \"Eurostat (Statistical office of the European Union) - COMEXT\"    \n 5 ESTAT      \"Eurostat (Statistical office of the European Union) - DG COMP\"   \n 6 ESTAT      \"Eurostat (Statistical office of the European Union) - DG GROW\"   \n 7 ESTAT      \"Eurostat (Statistical office of the European Union) - DG EMPL\"   \n 8 IMF        \"International Monetary Fund\"                                     \n 9 OECD       \"Organisation for Economic Cooperation and Development \"          \n10 UNICEF     \"United Nations International Children's Emergency Fund\"          \n11 CD2030     \"United Nations International Children's Emergency Fund\"          \n12 UNSD       \"United Nations Statistics Division\"                              \n13 ILO_Legacy \"International Labour Organization of the United Nations\"         \n14 ILO        \"International Labour Organization of the United Nations\"         \n15 WBG_WITS   \"World Integrated Trade Solution\"                                 \n16 WB         \"World Bank\"                                                      \n17 PDH        \"Pacific Data Hub DotStat\"                                        \n18 ABS        \"Australian Bureau of Statistics\"                                 \n19 NBB        \"National Bank of Belgium\"                                        \n20 INSEE      \"Institut national de la statistique et des études économiques\"   \n21 INEGI      \"Instituto Nacional de Estadística y Geografía (Méjico)\"          \n22 ISTAT      \"Istituto nazionale di statistica (Italia)\"                       \n23 NOMIS      \"NOMIS - UK Official Labour Market Statistics\"                    \n24 LSD        \"Statistics Lithuania\"                                            \n25 NCSI       \"Sultanate of Oman - National Center for Statistics & Information\"\n26 STAT_EE    \"Statistics Estonia database\"                                     \n27 BBK        \"Bundesbank\"                                                      \n28 KNOEMA     \"KNOEMA knowledge plateform\"                                      \n\n\n\nFinding an education codelist from ABS\nNow let’s find a dataflow with disaggregations by education from the Australian Bureau of Statistics:\n\nall_abs_dataflows &lt;- rsdmx::readSDMX(\n  providerId = \"ABS\",\n  resource = \"dataflow\"\n)\n\n[rsdmx][INFO] Fetching 'https://api.data.abs.gov.au/dataflow/all/all/latest/' \n\nall_abs_dataflows_table &lt;- dplyr::as_tibble(all_abs_dataflows)\n\nAfter some interactive searching, I discovered that the ABS reports educational attainment separately for highest year of primary or secondary school (up to year 12) completed and for highest “non-school qualification”, where non-school qualifications are levels of education other than pre-primary, primary, and secondary. For highest year of (primary or secondary) school completed, we can use “Census 2021, G16 Highest year of school completed by age by sex, Commonwealth Electoral Divisions (CED 2021 boundaries)” dataflow, which uses the “C21_G16_CED” data structure definition (DSD), and for highest non-school qualification, we can use “Census 2021, G49 Highest non-school qualification: level of education by age by sex, Commonwealth Electoral Divisions (CED 2021 boundaries)” dataflow, which uses the “C21_G49_CED” DSD.\n\nabs_highest_yr_of_school_DSD &lt;- rsdmx::readSDMX(\n  providerId = \"ABS\",\n  resource = \"datastructure\",\n  resourceId = \"C21_G16_CED\"\n)\n\n[rsdmx][INFO] Fetching 'https://api.data.abs.gov.au/datastructure/all/C21_G16_CED/latest/?references=children' \n\nabs_highest_non_school_qual_DSD &lt;- rsdmx::readSDMX(\n  providerId = \"ABS\",\n  resource = \"datastructure\",\n  resourceId = \"C21_G49_CED\"\n)\n\n[rsdmx][INFO] Fetching 'https://api.data.abs.gov.au/datastructure/all/C21_G49_CED/latest/?references=children' \n\n\nNow let’s look at the codelists used in those DSDs, starting with highest year of school:\n\nabs_highest_yr_of_school_DSD_codelists &lt;-\n  abs_highest_yr_of_school_DSD@codelists@codelists\n\npurrr::map(\n  abs_highest_yr_of_school_DSD_codelists,\n  ~dplyr::tibble(id = .x@id, name = .x@Name$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 6 × 2\n  id             name                                   \n  &lt;chr&gt;          &lt;chr&gt;                                  \n1 CL_C21_AGEP04  Age 04                                 \n2 CL_C21_HSCP02  Highest Year of School Completed 02    \n3 CL_C21_SEXP01  Sex 01                                 \n4 CL_CED_2021    Commonwealth Electoral Divisions - 2021\n5 CL_REGION_TYPE Region Type                            \n6 CL_STATE       State                                  \n\n\nThis DSD uses the “CL_C21_HSCP02” codelist. Let’s see the codes and labels for that codelist:\n\nCL_C21_HSCP02_codelist &lt;- purrr::keep(\n  abs_highest_yr_of_school_DSD_codelists,\n  ~.x@id == \"CL_C21_HSCP02\"\n)[[1]]\n\npurrr::map(\n  CL_C21_HSCP02_codelist@Code,\n  ~dplyr::tibble(id = .x@id, label = .x@label$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 8 × 2\n  id    label                            \n  &lt;chr&gt; &lt;chr&gt;                            \n1 _T    Total                            \n2 1     Year 12 or equivalent            \n3 2     Year 11 or equivalent            \n4 3     Year 10 or equivalent            \n5 4     Year 9 or equivalent             \n6 5     Year 8 or below                  \n7 6     Did not go to school             \n8 _N    Highest year of school not stated\n\n\nNow for non-school qualification:\n\nabs_highest_non_school_qual_DSD_codelists &lt;-\n  abs_highest_non_school_qual_DSD@codelists@codelists\n\npurrr::map(\n  abs_highest_non_school_qual_DSD_codelists,\n  ~dplyr::tibble(id = .x@id, name = .x@Name$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 6 × 2\n  id             name                                           \n  &lt;chr&gt;          &lt;chr&gt;                                          \n1 CL_C21_AGEP08  Age 08                                         \n2 CL_C21_QALLP02 Non-school qualification: Level of education 02\n3 CL_C21_SEXP01  Sex 01                                         \n4 CL_CED_2021    Commonwealth Electoral Divisions - 2021        \n5 CL_REGION_TYPE Region Type                                    \n6 CL_STATE       State                                          \n\n\nThis DSD uses the “CL_C21_QALLP02” codelist. Let’s see the codes and labels for that codelist:\n\nCL_C21_QALLP02_codelist &lt;- purrr::keep(\n  abs_highest_non_school_qual_DSD_codelists,\n  ~.x@id == \"CL_C21_QALLP02\"\n)[[1]]\n\npurrr::map(\n  CL_C21_QALLP02_codelist@Code,\n  ~dplyr::tibble(id = .x@id, label = .x@label$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 11 × 2\n   id    label                                          \n   &lt;chr&gt; &lt;chr&gt;                                          \n 1 _T    Total                                          \n 2 1     Postgraduate Degree Level                      \n 3 2     Graduate Diploma and Graduate Certificate Level\n 4 3     Bachelor Degree Level                          \n 5 4     Advanced Diploma and Diploma Level             \n 6 5     Certificate Level Total                        \n 7 51    Certificate III and IV Level                   \n 8 52    Certificate I and II Level                     \n 9 50    Certificate Level, nfd                         \n10 0     Level of education inadequately described      \n11 _N    Level of education not stated                  \n\n\n\n\nFinding an education codelist from PDH\nNow let’s find a dataflow with disaggregations by education from the Pacific Data Hub:\n\nall_pdh_dataflows &lt;- rsdmx::readSDMX(\n  providerId = \"PDH\",\n  resource = \"dataflow\"\n)\n\n[rsdmx][INFO] Fetching 'https://stats-nsi-stable.pacificdata.org/rest/dataflow/all/all/latest/' \n\nall_pdh_dataflows_table &lt;- dplyr::as_tibble(all_pdh_dataflows)\n\nLet’s see which dataflows mention education:\n\nall_pdh_dataflows_table |&gt; \n  dplyr::filter(stringr::str_detect(Name.en, \"[Ee]ducation\")) |&gt; \n  dplyr::select(id, Name.en, dsdRef)\n\n# A tibble: 6 × 3\n  id           Name.en                                                    dsdRef\n  &lt;chr&gt;        &lt;chr&gt;                                                      &lt;chr&gt; \n1 DF_EDUCATION Education Attainment by country age, sex, urbanisation, a… DSD_E…\n2 DF_EMPLOYED  Employed population by education, occupation and economic… DSD_E…\n3 DF_NEET      NEET - Youth not in education, employment or training (15… DSD_N…\n4 DF_NMDI_EDU  National Minimum Development Indicators (NMDI) for Educat… DSD_N…\n5 DF_SDG_04    Sustainable Development Goal 04 - Quality Education        DSD_S…\n6 DF_UIS       Thematic (SDG goal 4) indicators on Education              DSD_U…\n\n\nThe dataflow “Education Attainment by country age, sex, urbanisation, and disability status”, which uses the “DSD_EDUCATION” DSD, looks like a good candidate. Let’s pull down information on that DSD:\n\npdh_educ_DSD &lt;- rsdmx::readSDMX(\n  providerId = \"PDH\",\n  resource = \"datastructure\",\n  resourceId = \"DSD_EDUCATION\"\n)\n\n[rsdmx][INFO] Fetching 'https://stats-nsi-stable.pacificdata.org/rest/datastructure/all/DSD_EDUCATION/latest/?references=children' \n\n\nWhat codelists are used by that DSD?\n\npdh_educ_DSD_codelists &lt;-\n  pdh_educ_DSD@codelists@codelists\n\npurrr::map(\n  pdh_educ_DSD_codelists,\n  ~dplyr::tibble(id = .x@id, name = .x@Name$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 12 × 2\n   id                      name                                                 \n   &lt;chr&gt;                   &lt;chr&gt;                                                \n 1 CL_COM_AGE              Common codelist for age                              \n 2 CL_COM_CONF_STATUS      Common codelist for confidentiality                  \n 3 CL_COM_DISABILITY       Common codelist for disability                       \n 4 CL_COM_FREQ             Common codelist for data frequencies                 \n 5 CL_COM_GEO_PICT         Common hierarchical codelist for PICTs               \n 6 CL_COM_ISCED11          Common codelist for the International Standard Class…\n 7 CL_COM_OBS_STATUS       Common codelist for observation statuses             \n 8 CL_COM_SEX              Common codelist for sex                              \n 9 CL_COM_UNIT_MEASURE     Common codelist for units of measure                 \n10 CL_COM_UNIT_MULT        Common codelist for unit multipliers                 \n11 CL_COM_URBANIZATION     Common codelist for urban/rural                      \n12 CL_EDUCATION_INDICATORS Codelist for EDUCATION indicators                    \n\n\nLooks like this DSD uses the “CL_COM_ISCED11” codelist for education level. What are the codes and labels in that codelist?\n\npdh_educ_codelist &lt;- purrr::keep(\n  pdh_educ_DSD@codelists@codelists,\n  ~.x@id == \"CL_COM_ISCED11\"\n)[[1]]\n\npurrr::map(\n  pdh_educ_codelist@Code,\n  ~dplyr::tibble(id = .x@id, label = .x@label$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 26 × 2\n   id    label                                  \n   &lt;chr&gt; &lt;chr&gt;                                  \n 1 _T    All education levels                   \n 2 X     No schooling                           \n 3 0     Early childhood education              \n 4 01    Early childhood educational development\n 5 02    Pre-primary education                  \n 6 1     Primary education                      \n 7 10    Primary education                      \n 8 1_g3  Primary education (Grade 3)            \n 9 1_g5  Primary education (Grade 5)            \n10 1_g7  Primary education (Grade 7)            \n# ℹ 16 more rows\n\n\n\n\nHarmonizing disparate education codelists\nTo combine the data on educational attainment from Australia and selected Pacific island countries, we need a way to harmonize the educational coding schemes used by each. This is not such a daunting task when there are only two codelists to harmonize, but if we imagine trying to combine data from fifty or one-hundred different sources, it starts to sound like a whole project of its own. To make this task scalable, we need a common standard coding scheme, and crosswalks between each individual coding scheme and the common standard.\nIPUMS is a natural place to look for a common standard coding scheme, given that the IPUMS International project has created tables that harmonize data from several hundred censuses and national surveys from over 100 countries. But IPUMS and its harmonization tables are not documented according to SDMX standards, nor are there machine-actionable links between IPUMS harmonization tables and SDMX codelists. The IUSSP FAIR Vocabulary of Demography (FVD) could serve as the linking hub between data documented in SDMX on the one hand, and IPUMS harmonization tables on the other hand, with standard demographic terms such as “Educational attainment” linking to both.\nHow would this work in the context of our example? First, members of the IPUMS, IUSSP, or SDMX communities would add links from FVD terms to corresponding IPUMS harmonization tables and SDMX artifacts such as concepts and codelists. For instance, the term “level of education” (here is that term on Demopaedia) would have links to the harmonization table for the IPUMS International variable EDATTAIN, as well as links to codelists for measuring level of education such as CL_C21_HSCP02, CL_C21_QALLP02, and CL_COM_ISCED11.\nOnce these links are in place, members of the IPUMS, IUSSP, or SDMX communities could integrate codelists into harmonization tables to which they are linked via the FVD. Here is a snippet of the EDATTAIN harmonization table for data from five Fijian census samples:\n\n\n\n\n\n\n\n\nCODE\nLABEL\nFJ1976A\nFJ1986A\nFJ1996A\nFJ2007A\nFJ2014A\n\n\n\n\n110\nNo schooling\n0 = No education\n0 = No education\n99 = NIU (not in universe)\n99 = NIU (not in universe)\n019 = Kirdengarten\n\n\n110\n\"\n\n\n0 = Kindergarten\n0 = Kindergarten\n999 = Never attended\n\n\n110\n\"\n\n\n\n\n029 = Year 1\n\n\n120\nSome primary\n1 = Primary - Class 1\n1 = Primary, 1 year\n1 = Primary class 1\n1 = Primary - Class 1\n039 = Year 2\n\n\n120\n\"\n2 = Primary - Class 2\n2 = Primary, 2 years\n2 = Primary class 2\n2 = Primary - Class 2\n049 = Year 3\n\n\n120\n\"\n3 = Primary - Class 3\n3 = Primary, 3 years\n3 = Primary class 3\n3 = Primary - Class 3\n059 = Year 4\n\n\n120\n\"\n4 = Primary - Class 4\n4 = Primary, 4 years\n4 = Primary class 4\n4 = Primary - Class 4\n069 = Year 5\n\n\n120\n\"\n5 = Primary - Class 5\n5 = Primary, 5 years\n5 = Primary class 5\n5 = Primary - Class 5\n079 = Year 6\n\n\n212\nPrimary (6 years)\n6 = Primary - Class 6\n6 = Primary, 6 years\n6 = Primary class 6\n6 = Primary - Class 6\n089 = Year 7\n\n\n212\n\"\n\n\n\n\n991 = Attended primary, year not specified\n\n\n212\n\"\n7 = Secondary - Form 1\n11 = Secondary, 1 year\n11 = Second form 1\n9 = Secondary - Form 1\n099 = Year 8\n\n\n212\n\"\n8 = Secondary - Form 2\n12 = Secondary, 2 years\n12 = Second form 2\n10 = Secondary - Form 2\n109 = Year 9\n\n\n212\n\"\n9 = Secondary - Form 3\n13 = Secondary, 3 years\n13 = Second form 3\n11 = Secondary - Form 3\n119 = Year 10\n\n\n221\nGeneral and unspecified track\n10 = Secondary - Form 4\n14 = Secondary, 4 years\n14 = Second form 4\n12 = Secondary - Form 4\n129 = Year 11\n\n\n221\n\"\n11 = Secondary - Form 5\n15 = Secondary, 5 years\n15 = Second form 5\n13 = Secondary - Form 5\n139 = Year 12\n\n\n311\n\"\n12 = Secondary - Form 6\n16 = Secondary, 6 years\n16 = Second form 6\n14 = Secondary - Form 6\n149 = Year 13\n\n\n311\n\"\n\n\n17 = Post-secondary\n15 = Post-Secondary (Form 7 or Foundation)\n179 = Foundation\n\n\n311\n\"\n\n\n\n\n992 = Attended secondary, year not specified\n\n\n312\nSome college/university\n* = Currently attending university\n* = Currently attending tertiary\n* = Currently attending bachelor degree\n* = Currently attending degree\n209 = Degree, field not specified\n\n\n322\nPost-secondary technical education\n13 = Teaching - NTC/CCTC etc\n\n21 = Certificate\n17 = Certificate - Year 1\n159 = Trade certificate, year not specified\n\n\n322\n\"\n14 = Teaching - USP\n\n\n18 = Certificate - Year 2+\n169 = Certificate, year not specified\n\n\n322\n\"\n16 = Technical - Govt\n\n22 = Diploma\n19 = Diploma - Year 1\n189 = Diploma, year not specified\n\n\n322\n\"\n17 = Technical - DTI\n\n\n20 = Diploma - Year 2+\n\n\n\n322\n\"\n21 = Sub-professional agriculture\n\n\n\n\n\n\n322\n\"\n23 = Sub-professional banking\n\n\n\n\n\n\n322\n\"\n26 = Other sub-professional\n\n\n\n\n\n\n400\nUNIVERSITY COMPLETED\n18 = Health, medicine and dentistry studies\n17 = Tertiary\n23 = Bachelor's\n24 = Degree\n993 = Attended tertiary, type and year not specified\n\n\n400\n4th year College (USA)\n19 = Nursing\n\n24 = Postgraduate diploma, Master's and Doctorate\n28 = Post Grad Certificate or Diploma\n219 = Postgraduate\n\n\n400\n\"\n20 = Professional agriculture\n\n\n35 = Masters and PhD\n229 = Master or PhD\n\n\n400\n\"\n22 = Professional banking\n\n\n\n\n\n\n400\n5th year or more College (USA)\n24 = Professional and technical architecture\n\n\n\n\n\n\n400\n\"\n25 = Other profession\n\n\n\n\n\n\n999\nUNKNOWN/MISSING\n98 = Unknown\n98 = Unknown\n98 = Unknown\n\n\n\n\n999\n\"\n15 = Theological - Christian\n\n\n40 = Other\n249 = Other qualification\n\n\n\n\n\n\n\nThe CODE and LABEL columns contain the code and label (or what would be called the id and label in SDMX parlance) for the IPUMS harmonized coding scheme. The other columns contain the input codes and labels from each data source, with a given input code aligned in the same row as the harmonized code to which it corresponds.\nWe can integrate the three codelists CL_C21_HSCP02, CL_C21_QALLP02, and CL_COM_ISCED11 into this harmonization table in the same way. The table below shows an attempt to integrate these codelists according to the principles of EDATTAIN (see the “Comparability” tab of the EDATTAIN documentation page). However, because these codelists are used for aggregate data, whereas EDATTAIN is built from microdata, there are some incompatible values, highlighted in the table.\n\n\n\n\n\n\n\n\nCODE\nLABEL\nCL_C21_HSCP02\nCL_C21_QALLP02\nCL_COM_ISCED11\n\n\n\n\n0\nNIU (not in universe)\n\n\n_Z = Not applicable\n\n\n100\nLESS THAN PRIMARY COMPLETED\n\n\n0 = Early childhood education\n\n\n100\n\n\n\n01 = Early childhood educational development\n\n\n100\n\n\n\n02 = Pre-primary education\n\n\n110\nNo schooling\n6 = Did not go to school\n\nX = No schooling\n\n\n120\nSome primary\n\n\n1_g3 = Primary education (Grade 3)\n\n\n120\n\"\n\n\n\n\n\n130\nPrimary (4 years)\n\n\n1_y4 = Primary education (Year 4)\n\n\n#\nPRIMARY COMPLETED, LESS THAN SECONDARY\n\n\n\n\n\n#\nPrimary completed\n\n\n\n\n\n211\nPrimary (5 years)\n\n\n1_g5 = Primary education (Grade 5)\n\n\n212\nPrimary (6 years)\n5 = Year 8 or below\n\n1 = Primary education\n\n\n212\n\"\n\n\n10 = Primary education\n\n\n212\n\"\n\n\n1_y6 = Primary education (Year 6)\n\n\n212\n\"\n\n\n1_g7 = Primary education (Grade 7)\n\n\n#\nLower secondary completed\n\n\n\n\n\n221\nGeneral and unspecified track\n4 = Year 9 or equivalent\n\n2-3 = Secondary education (lower and upper secondary education)\n\n\n221\n\"\n3 = Year 10 or equivalent\n\n2 = Lower secondary education\n\n\n221\n\"\n2 = Year 11 or equivalent\n\n\n\n\n222\nTechnical track\n\n\n\n\n\n#\nSECONDARY COMPLETED\n\n\n\n\n\n#\nGeneral or unspecified track\n\n\n\n\n\n311\nGeneral track completed\n1 = Year 12 or equivalent\n\n3 = Upper secondary education\n\n\n312\nSome college/university\n\n\n\n\n\n320\nTechnical track\n\n\n\n\n\n321\nSecondary technical degree\n\n\n\n\n\n322\nPost-secondary technical education\n\n5 = Certificate Level Total\n4 = Post-secondary non-tertiary education\n\n\n322\n\"\n\n51 = Certificate III and IV Level\n5 = Short-cycle tertiary education\n\n\n322\n\"\n\n52 = Certificate I and II Level\n\n\n\n322\n\"\n\n50 = Certificate Level, nfd\n\n\n\n400\nUNIVERSITY COMPLETED\n\n1 = Postgraduate Degree Level\n5-8 = Tertiary education\n\n\n400\n\"\n\n2 = Graduate Diploma and Graduate Certificate Level\n6 = Bachelor's or equivalent level\n\n\n400\n\"\n\n3 = Bachelor Degree Level\n7 = Master's or equivalent level\n\n\n400\n\"\n\n4 = Advanced Diploma and Diploma Level\n8 = Doctoral or equivalent level\n\n\n400\n\"\n\n\n\n\n\n999\nUNKNOWN/MISSING\n_T = Total\n_T = Total\n_T = All education levels\n\n\n999\n\"\n_N = Highest year of school not stated\n0 = Level of education inadequately described\n9 = Level not stated\n\n\n999\n\"\n\n_N = Level of education not stated\nOTH = Other\n\n\n999\n\"\n\n\n_U = Unknown\n\n\n999\n\"\n\n\n_X = Not allocated/unspecified\n\n\n\n\n\n\n\nThe highlighted values encompass multiple values of EDATTAIN. One way to handle this would be to adapt the harmonization table structure to support such codes, perhaps by placing such codes to the left of the harmonized codes:\n\n\n\n\n\n\n\n\nCL_COM_ISCED11\nCL_COM_ISCED11\nCL_C21_QALLP02\nCL_C21_QALLP02\nCL_C21_HSCP02\nCL_C21_HSCP02\nCODE\nLABEL\n\n\n\n\n_T = All education levels\n\n\n\n_T = Total\n5 = Year 8 or below\n100\nLESS THAN PRIMARY COMPLETED\n\n\n_T = All education levels\n\n\n\n_T = Total\n5 = Year 8 or below\n110\nNo schooling\n\n\n_T = All education levels\n\n\n\n_T = Total\n5 = Year 8 or below\n120\nSome primary\n\n\n_T = All education levels\n\n\n\n_T = Total\n5 = Year 8 or below\n130\nPrimary (4 years)\n\n\n\n\n\n\n\n\n#\nPRIMARY COMPLETED, LESS THAN SECONDARY\n\n\n\n\n\n\n\n\n#\nPrimary completed\n\n\n_T = All education levels\n\n\n\n_T = Total\n5 = Year 8 or below\n211\nPrimary (5 years)\n\n\n_T = All education levels\n\n\n\n_T = Total\n5 = Year 8 or below\n212\nPrimary (6 years)\n\n\n\n\n\n\n\n\n#\nLower secondary completed\n\n\n_T = All education levels\n2-3 = Secondary education (lower and upper secondary education)\n\n\n_T = Total\n\n221\nGeneral and unspecified track\n\n\n\n\n\n\n\n\n#\nSECONDARY COMPLETED\n\n\n\n\n\n\n\n\n#\nGeneral or unspecified track\n\n\n_T = All education levels\n2-3 = Secondary education (lower and upper secondary education)\n\n\n_T = Total\n1 = Year 12 or equivalent\n311\nGeneral track completed\n\n\n\n\n\n\n\n1 = Year 12 or equivalent\n312\nSome college/university\n\n\n\n\n\n\n\n1 = Year 12 or equivalent\n320\nTechnical track\n\n\n\n\n\n\n\n1 = Year 12 or equivalent\n321\nSecondary technical degree\n\n\n_T = All education levels\n\n_T = Total\n5 = Certificate Level Total\n\n1 = Year 12 or equivalent\n322\nPost-secondary technical education\n\n\n_T = All education levels\n\n_T = Total\n\n\n1 = Year 12 or equivalent\n400\nUNIVERSITY COMPLETED\n\n\n_T = All education levels\n\n_T = Total\n\n_T = Total\n\n999\nUNKNOWN/MISSING\n\n\n\n\n\n\n\n\n\nLeveraging harmonized codelists\nNow that we’ve integrated all of these codelists into a harmonized coding scheme, we can pull down the dataflows and compare them side by side. First we can pull down the ABS data:\n\nabs_highest_yr_of_school_dataflow &lt;- rsdmx::readSDMX(\n  providerId = \"ABS\",\n  resource = \"data\",\n  flowRef = \"C21_G16_CED\"\n)\n\n[rsdmx][INFO] Fetching 'https://api.data.abs.gov.au/data/C21_G16_CED/all/all/' \n\nabs_highest_yr_of_school_tbl &lt;- dplyr::as_tibble(abs_highest_yr_of_school_dataflow)\n\nabs_highest_non_school_qual_dataflow &lt;- rsdmx::readSDMX(\n  providerId = \"ABS\",\n  resource = \"data\",\n  flowRef = \"C21_G49_CED\"\n)\n\n[rsdmx][INFO] Fetching 'https://api.data.abs.gov.au/data/C21_G49_CED/all/all/' \n\nabs_highest_non_school_qual_tbl &lt;- dplyr::as_tibble(abs_highest_non_school_qual_dataflow)\n\nAnd now the PDH data:\n\npdh_educ_dataflow &lt;- rsdmx::readSDMX(\n  providerId = \"PDH\",\n  resource = \"data\",\n  flowRef = \"DF_EDUCATION\"\n)\n\n[rsdmx][INFO] Fetching 'https://stats-nsi-stable.pacificdata.org/rest/data/DF_EDUCATION/all/all/' \n\npdh_educ_tbl &lt;- dplyr::as_tibble(pdh_educ_dataflow)\n\nLet first summarize the ABS data to the national level:\n\nabs_highest_yr_of_school_tbl_natl &lt;- abs_highest_yr_of_school_tbl |&gt; \n  dplyr::summarize(\n    n_persons = sum(obsValue),\n    .by = c(SEXP, HSCP, AGEP, obsTime)\n  )\n\nabs_highest_non_school_qual_tbl_natl &lt;- abs_highest_non_school_qual_tbl |&gt; \n  dplyr::summarize(\n    n_persons = sum(obsValue),\n    .by = c(SEXP, QALLP, AGEP, obsTime)\n  )\n\nBased on the descriptions of these dataflows that we pulled down with all ABS dataflows, the highest year of school table includes persons 15 years and over who are no longer attending primary or secondary school, whereas the highest non-school qualification table includes persons 15 years and over with a non-school qualification. We can combine these if we assume that anyone with a non-school qualification completed the 12th grade of school. Does that assumption hold up if we compare the counts?\n\npersons_completing_12th_grade &lt;- abs_highest_yr_of_school_tbl_natl |&gt; \n  dplyr::filter(HSCP == \"1\") |&gt; \n  dplyr::summarize(\n    n_completing_12th_grade = sum(n_persons),\n    .by = c(SEXP, AGEP)\n  )\n\npersons_with_a_non_school_qual &lt;- abs_highest_non_school_qual_tbl_natl |&gt; \n  dplyr::filter(QALLP %in% as.character(1:5)) |&gt; \n  dplyr::summarize(\n    n_with_non_school_qual = sum(n_persons),\n    .by = c(SEXP, AGEP)\n  )\n\npersons_completing_12th_grade |&gt; \n  dplyr::full_join(persons_with_a_non_school_qual)\n\nJoining with `by = join_by(SEXP, AGEP)`\n\n\n# A tibble: 33 × 4\n   SEXP  AGEP  n_completing_12th_grade n_with_non_school_qual\n   &lt;chr&gt; &lt;chr&gt;                   &lt;dbl&gt;                  &lt;dbl&gt;\n 1 3     20_24                 1240581                     NA\n 2 3     15_19                  375967                     NA\n 3 3     65_74                  968244                1140391\n 4 3     _T                   11729401               11374148\n 5 1     55_64                  649544                 857860\n 6 3     75_84                  409713                 470153\n 7 1     65_74                  499592                 631040\n 8 2     45_54                 1062280                1078482\n 9 2     35_44                 1364172                1316730\n10 1     _T                    5572028                5632986\n# ℹ 23 more rows\n\n\nHmm, it looks like that assumption doesn’t hold up – there are more people with a non-school qualification than there are people who have completed 12th grade in many of these groups. This suggests that we can’t combine these tables in any straightforward way. This means we will need a new strategy to compare the ABS statistics to those from PDH. One approach we can try is to topcode the PDH statistics at “Upper secondary or higher”.\nLet’s see how we would use our restructured harmonization table to recode the ABS and PDH statistics into a single coding scheme:\n\n#' Attach harmonized codes and labels to variable in a data.frame using a harmonization table\n#' \n#' @param df Data containing a variable to be harmonized\n#' @param harmonization_table Path to the harmonization table\n#' @param harmonized_var_name Name of the harmonized variable\n#' @param var_to_harmonize Column name of variable to harmonize\n#' @param codelist_id Identifier for the codelist used by the variable to harmonize\nattach_harmonized_codes_and_labels &lt;- function(df,\n                                               harmonization_table,\n                                               harmonized_var_name,\n                                               var_to_harmonize,\n                                               codelist_id) {\n  raw_harmonization_table &lt;- read.csv(harmonization_table)\n  micro_recodes &lt;- get_micro_recodes(raw_harmonization_table)\n  aggregate_recodes &lt;- get_aggregate_recodes(raw_harmonization_table)\n  micro_recoding_key &lt;- make_micro_recoding_key(micro_recodes)\n  aggregate_recoding_key &lt;- make_aggregate_recoding_key(aggregate_recodes)\n  attach_harmonized_recodes(\n    df, \n    micro_recoding_key, \n    aggregate_recoding_key,\n    harmonized_var_name,\n    var_to_harmonize,\n    codelist_id\n  )\n}\n\n\nget_aggregate_recodes &lt;- function(raw_harmonization_table) {\n  label_column_index &lt;- which(names(raw_harmonization_table) == \"LABEL\")\n  raw_harmonization_table[ , 1:label_column_index]\n}\n\nget_micro_recodes &lt;- function(raw_harmonization_table) {\n  code_column_index &lt;- which(names(raw_harmonization_table) == \"CODE\")\n  raw_harmonization_table[ , code_column_index:ncol(raw_harmonization_table)]\n}\n\n\nmake_micro_recoding_key &lt;- function(micro_recodes) {\n  micro_recodes |&gt; \n    dplyr::mutate(\n      LABEL = dplyr::if_else(\n        stringr::str_detect(LABEL, \"^$|^\\\\s*\\\"\\\\s*$\"),\n        NA_character_,\n        LABEL\n      )\n    ) |&gt; \n    tidyr::fill(LABEL) |&gt; \n    tidyr::pivot_longer(\n      cols = c(-CODE, -LABEL), \n      names_to = \".codelist_id\", \n      values_to = \"input_code_and_label\"\n    ) |&gt; \n    dplyr::filter(input_code_and_label != \"\") |&gt; \n    dplyr::mutate(\n      .codelist_id = stringr::str_remove(.codelist_id, \"\\\\.[0-9]+$\"),\n      input_code = stringr::str_extract(input_code_and_label, \"^.+(?= =)\"),\n      input_label = stringr::str_extract(input_code_and_label, \"(?&lt;== ).+$\"),\n      LABEL = stringr::str_trim(LABEL)\n    )\n}\n\n\nmake_aggregate_recoding_key &lt;- function(aggregate_recodes) {\n  aggregate_recodes |&gt; \n    dplyr::filter(dplyr::if_any(.cols = c(-CODE, -LABEL), .fns = ~.x != \"\")) |&gt; \n    tidyr::pivot_longer(\n      cols = c(-CODE, -LABEL), \n      names_to = \".codelist_id\", \n      values_to = \"recode_and_label\"\n    ) |&gt; \n    dplyr::filter(recode_and_label != \"\") |&gt; \n    dplyr::mutate(\n      .codelist_id = stringr::str_remove(.codelist_id, \"\\\\.[0-9]+$\"),\n      recode = stringr::str_extract(recode_and_label, \"^.+(?= =)\"),\n      recode_label = stringr::str_extract(recode_and_label, \"(?&lt;== ).+$\"),\n      LABEL = stringr::str_trim(LABEL)\n    ) |&gt; \n    dplyr::select(-recode_and_label) |&gt; \n    dplyr::mutate(\n      min_code = min(CODE),\n      max_code = max(CODE),\n      min_label = LABEL[CODE == min(CODE)][[1]],\n      max_label = LABEL[CODE == max(CODE)][[1]],\n      .by = c(.codelist_id, recode)\n    ) |&gt; \n    dplyr::mutate(\n      standardized_recode = paste0(min_code, \"-\", max_code), \n      standardized_recode_label = paste0(min_label, \" - \", max_label)\n    )\n}\n\n\nattach_harmonized_recodes &lt;- function(df, \n                                      micro_recoding_key, \n                                      aggregate_recoding_key,\n                                      harmonized_var_name,\n                                      var_to_harmonize,\n                                      codelist_id) {\n  \n  harmonized_var_name &lt;- rlang::sym(harmonized_var_name)\n  harmonized_var_label &lt;- rlang::sym(paste0(harmonized_var_name, \"_LABEL\"))\n  harmonized_var_name_agg &lt;- rlang::sym(paste0(harmonized_var_name, \"_agg\"))\n  harmonized_var_label_agg &lt;- rlang::sym(paste0(harmonized_var_name, \"_agg_LABEL\"))\n  \n  df |&gt; \n    dplyr::left_join(\n      micro_recoding_key |&gt; \n        dplyr::filter(.codelist_id == codelist_id) |&gt; \n        dplyr::select(\n          !!harmonized_var_name := CODE, \n          !!harmonized_var_label := LABEL, \n          !!rlang::sym(var_to_harmonize) := input_code\n        ),\n      by = var_to_harmonize\n    ) |&gt; \n    dplyr::left_join(\n      aggregate_recoding_key |&gt; \n        dplyr::filter(.codelist_id == codelist_id) |&gt; \n        dplyr::distinct(standardized_recode, standardized_recode_label, recode) |&gt; \n        dplyr::select(\n          !!harmonized_var_name_agg := standardized_recode, \n          !!harmonized_var_label_agg := standardized_recode_label, \n          !!rlang::sym(var_to_harmonize) := recode\n        ),\n      by = var_to_harmonize\n    ) |&gt; \n    dplyr::mutate(\n      !!harmonized_var_name := dplyr::coalesce(\n        !!harmonized_var_name, \n        !!harmonized_var_name_agg\n      ),\n      !!harmonized_var_label := dplyr::coalesce(\n        !!harmonized_var_label, \n        !!harmonized_var_label_agg\n      )\n    ) |&gt; \n    dplyr::select(-(dplyr::contains(\"_agg\")))\n}\n\n\nabs_harmonized &lt;- attach_harmonized_codes_and_labels(\n  abs_highest_yr_of_school_tbl_natl,\n  harmonization_table = \n    \"EDATTAIN_harmonization_table_with_integrated_codelists_and_alternate_structure.csv\",\n  harmonized_var_name = \"EDATTAIN\",\n  var_to_harmonize = \"HSCP\",\n  codelist_id = \"CL_C21_HSCP02\"\n)\n\n\npdh_harmonized &lt;- attach_harmonized_codes_and_labels(\n  pdh_educ_tbl,\n  harmonization_table = \n    \"EDATTAIN_harmonization_table_with_integrated_codelists_and_alternate_structure.csv\",\n  harmonized_var_name = \"EDATTAIN\",\n  var_to_harmonize = \"EDUCATION\",\n  codelist_id = \"CL_COM_ISCED11\"\n)\n\nNow let’s see the range of harmonized codes and labels in each dataset:\n\nabs_harmonized |&gt; \n  dplyr::distinct(EDATTAIN, EDATTAIN_LABEL) |&gt; \n  dplyr::arrange(EDATTAIN)\n\n# A tibble: 6 × 2\n  EDATTAIN EDATTAIN_LABEL                                 \n  &lt;chr&gt;    &lt;chr&gt;                                          \n1 100-212  LESS THAN PRIMARY COMPLETED - Primary (6 years)\n2 100-999  LESS THAN PRIMARY COMPLETED - UNKNOWN/MISSING  \n3 110      No schooling                                   \n4 221      General and unspecified track                  \n5 311-400  General track completed - UNIVERSITY COMPLETED \n6 999      UNKNOWN/MISSING                                \n\n\n\npdh_harmonized |&gt; \n  dplyr::distinct(EDATTAIN, EDATTAIN_LABEL) |&gt; \n  dplyr::arrange(EDATTAIN)\n\n# A tibble: 8 × 2\n  EDATTAIN EDATTAIN_LABEL                               \n  &lt;chr&gt;    &lt;chr&gt;                                        \n1 100      LESS THAN PRIMARY COMPLETED                  \n2 100-999  LESS THAN PRIMARY COMPLETED - UNKNOWN/MISSING\n3 212      Primary (6 years)                            \n4 221      General and unspecified track                \n5 311      General track completed                      \n6 322      Post-secondary technical education           \n7 400      UNIVERSITY COMPLETED                         \n8 999      UNKNOWN/MISSING                              \n\n\nLooks like we can compare using codes 100-212, 221, 311-400, and 999.\n\npdh_harmonized_collapsed &lt;- pdh_harmonized |&gt; \n  dplyr::mutate(\n    EDATTAIN_collapsed = dplyr::case_when(\n      EDATTAIN %in% c(100, 212) ~ \"100-212\",\n      EDATTAIN %in% c(311, 322, 400) ~ \"311-400\",\n      .default = EDATTAIN\n    )\n  )\n\nThe description for the PDH data doesn’t mention an age universe, but the age categories in the data suggest the universe is persons 25 and over, so we should limit the ABS data to that age range for the comparison. What are the codes for ages 25 and over?\n\nCL_C21_AGEP04_codelist &lt;- purrr::keep(\n  abs_highest_yr_of_school_DSD_codelists,\n  ~.x@id == \"CL_C21_AGEP04\"\n)[[1]]\n\npurrr::map(\n  CL_C21_AGEP04_codelist@Code,\n  ~dplyr::tibble(id = .x@id, label = .x@label$en)\n) |&gt; \n  purrr::list_rbind()\n\n# A tibble: 10 × 2\n   id    label            \n   &lt;chr&gt; &lt;chr&gt;            \n 1 _T    Total            \n 2 15_19 15-19 years      \n 3 20_24 20-24 years      \n 4 25_34 25-34 years      \n 5 35_44 35-44 years      \n 6 45_54 45-54 years      \n 7 55_64 55-64 years      \n 8 65_74 65-74 years      \n 9 75_84 75-84 years      \n10 GE85  85 years and over\n\n\nLooks like we want everything except codes “_T”, “15_19”, and “20_24”.\nNow let’s limit the statistics to totals by age and sex, and then we can combine them:\n\nabs_harmonized_totals &lt;- abs_harmonized |&gt; \n  dplyr::filter(SEXP == 3 & !AGEP %in% c(\"_T\", \"15_19\", \"20_24\")) |&gt; \n  dplyr::summarize(n_persons = sum(n_persons), .by = c(EDATTAIN, EDATTAIN_LABEL)) |&gt; \n  dplyr::filter(EDATTAIN %in% c(\"100-212\", \"221\", \"311-400\", \"999\")) |&gt; \n  dplyr::mutate(\n    pct = round(100 * n_persons / sum(n_persons), 2),\n    country = \"AU\"\n  )\n\npdh_harmonized_totals &lt;- pdh_harmonized_collapsed |&gt; \n  dplyr::filter(SEX == \"_T\" & AGE == \"_T\" & DISABILITY == \"_T\") |&gt; \n  dplyr::summarize(n_persons = sum(obsValue), .by = c(GEO_PICT, EDATTAIN_collapsed)) |&gt; \n  dplyr::filter(EDATTAIN_collapsed %in% c(\"100-212\", \"221\", \"311-400\", \"999\")) |&gt; \n  dplyr::mutate(pct = round(100 * n_persons / sum(n_persons), 2), .by = GEO_PICT) |&gt; \n  dplyr::rename(country = GEO_PICT, EDATTAIN = EDATTAIN_collapsed) |&gt; \n  dplyr::left_join(\n    abs_harmonized_totals |&gt; \n      dplyr::distinct(EDATTAIN, EDATTAIN_LABEL),\n    by = \"EDATTAIN\"\n  )\n\ncombined_harmonized_totals &lt;- dplyr::bind_rows(abs_harmonized_totals, pdh_harmonized_totals)\n\nNow let’s join on the country labels:\n\nCL_COM_GEO_PICT_codelist &lt;- purrr::keep(\n  pdh_educ_DSD_codelists,\n  ~.x@id == \"CL_COM_GEO_PICT\"\n)[[1]]\n\ncountry_codes &lt;- purrr::map(\n  CL_COM_GEO_PICT_codelist@Code,\n  ~dplyr::tibble(id = .x@id, label = .x@label$en)\n) |&gt; \n  purrr::list_rbind()\n\ncombined_harmonized_totals &lt;- combined_harmonized_totals |&gt; \n  dplyr::left_join(\n    country_codes |&gt; \n      dplyr::rename(country = id, country_label = label), \n    by = \"country\"\n  ) |&gt; \n  dplyr::mutate(\n    country_label = dplyr::if_else(country == \"AU\", \"Australia\", country_label)\n  )\n\nNow we can plot the distributions:\n\ncombined_harmonized_totals |&gt; \n  dplyr::mutate(\n    edattain_start_numeric = as.numeric(stringr::str_extract(EDATTAIN, \"^[0-9]+\")),\n    EDATTAIN_LABEL = dplyr::case_match(\n      EDATTAIN_LABEL,\n      \"General and unspecified track\" ~ \"Lower secondary completed\",\n      \"General track completed - UNIVERSITY COMPLETED\" ~ \"Upper secondary or higher completed\",\n      \"LESS THAN PRIMARY COMPLETED - Primary (6 years)\" ~ \"Primary completed or less\",\n      .default = EDATTAIN_LABEL\n    )\n  ) |&gt; \n  ggplot2::ggplot(\n    ggplot2::aes(x = forcats::fct_reorder(EDATTAIN_LABEL, edattain_start_numeric, .desc = TRUE), y = pct)\n  ) +\n    ggplot2::geom_col() + \n    ggplot2::facet_wrap(~country_label) +\n    ggplot2::coord_flip() +\n    ggplot2::labs(\n      title = \"Educational attainment, selected countries in Oceania\", \n      subtitle = \"Persons age 25+\",\n      x = NULL, \n      y = \"%\",\n      caption = \"Sources: Australian Bureau of Statistics and Pacific Data Hub\"\n    )"
  }
]